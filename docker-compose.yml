services:
  backend:
    build:
      context: ./BACKEND
    ports:
      - "3001:3001"
      - "9229:9229"
    env_file:
      - ./BACKEND/.env
    volumes:
      - ./BACKEND:/usr/src/app
    command: ${BACKEND_COMMAND:-npm run dev}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./FRONTEND
    ports:
      - "3000:3000"
      - "9240:9240"
      - "9241:9241"
    env_file:
      - ./FRONTEND/.env
    volumes:
      - ./FRONTEND:/usr/src/app
    command: ${FRONTEND_COMMAND:-npm run dev}
    depends_on:
      - backend
    networks:
      - app-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
